/* === Global Styles === */
:root {
  --primary-color: #2563eb; /* Vibrant blue */
  --secondary-color: #1e40af; /* Darker blue */
  --background-color: #0f172a; /* Deep navy */
  --text-color: #f8fafc; /* Light gray */
  --accent-color: #34d399; /* Vibrant green */
  --font-family: 'Inter', system-ui, sans-serif;
  --max-width: 1200px;
  --transition: all 0.3s ease;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: Arial, sans-serif;
  background-color: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
  overflow-x: hidden;
}

a {
  color: var(--accent-color);
  text-decoration: none;
  transition: var(--transition);
}

a:hover {
  opacity: 0.8;
}

/* === Container === */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 20px;
  position: relative; /* Add relative positioning to the container */
}

/* === Header === */
header {
  padding: 2rem 0;
  text-align: center;
  background: linear-gradient(145deg, var(--primary-color), var(--secondary-color));
  clip-path: polygon(0 0, 100% 0, 100% 90%, 0 100%);
  margin-bottom: 4rem;
}

header h1 {
  font-size: 3.5rem;
  font-weight: 800;
  margin-bottom: 1rem;
  animation: fadeIn 1s ease-in-out;
}

header p {
  font-size: 1.25rem;
  max-width: 600px;
  margin: 0 auto;
  animation: fadeIn 1.5s ease-in-out;
}

/* === Hero Section === */
.hero {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem;
  margin-bottom: 6rem;
}

.hero .cta-button {
  background-color: var(--accent-color);
  color: var(--background-color);
  padding: 1rem 2.5rem;
  border-radius: 50px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 1px;
  transition: var(--transition);
  animation: pulse 2s infinite;
}

.hero .cta-button:hover {
  transform: translateY(-3px);
  box-shadow: 0 10px 20px rgba(52, 211, 153, 0.2);
}

/* === Features Section === */
.features {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-bottom: 6rem;
}

.feature-card {
  background: rgba(255, 255, 255, 0.05);
  padding: 2rem;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  transition: var(--transition);
}

.feature-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
}

.feature-card h3 {
  font-size: 1.5rem;
  margin-bottom: 1rem;
  color: var(--accent-color);
}

.feature-card p {
  font-size: 1rem;
  opacity: 0.9;
}

/* === Simulation Section === */
.simulation-section {
  padding: 4rem 0;
  background: rgba(255, 255, 255, 0.05);
  margin-top: 4rem;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  position: relative; /* Ensure the container is relatively positioned */
  min-height: 80vh; /* Ensure the section is at least 80% of the viewport height */
}

simulation-section h2 {
  font-size: 2.5rem;
  margin-bottom: 1rem;
  color: var(--accent-color);
}

.simulation-section p {
  font-size: 1.1rem;
  opacity: 0.9;
  margin-bottom: 2rem;
}

/* === Canvases === */
.canvas-container {
  position: relative;
  width: 100%;
  height: 500px; /* Set a fixed height for the canvas container */
}

#webglCanvas, #overlayCanvas {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 12px;
  border: 1px solid rgba(255, 255, 255, 0.1);
  background-color: black; /* Keep canvas background black */
}

#webglCanvas {
  z-index: 1; /* Lower z-index for WebGL canvas */
}

#overlayCanvas {
  z-index: 2; /* Higher z-index for overlay canvas */
  pointer-events: none; /* Ensure interactions happen on the WebGL canvas */
  background-color: transparent; /* make overlay transparent */
}

/* === Controls === */
#controls {
  display: flex;
  flex-wrap: wrap;
  gap: 20px;
  background-color: var(--background-color); /* Set control panel background to dark blue */
  border: 1px solid #ddd;
  padding: 20px;
  border-radius: 8px;
  margin-top: 20px;
}

#controls button {
  background-color: var(--primary-color);
  color: var(--background-color);
  padding: 0.75rem 1.5rem;
  border-radius: 5px;
  border: none;
  cursor: pointer;
  transition: var(--transition);
  width: 100%;
  max-width: 300px;
}

#controls button:hover {
  background-color: var(--secondary-color);
}

#controls label {
  margin-right: 0.5rem;
}

#controls input[type="range"] {
  width: 100%;
  max-width: 300px;
}

#controls .control-group {
  flex: 1 1 calc(33.333% - 20px);
  min-width: 200px;
}

/* === Control Group === */
.control-group {
  margin-bottom: 15px;
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
  justify-content: space-between;
}

.control-group label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}

.control-group input[type="range"] {
  width: 100%;
}

.control-group button {
  display: inline-block;
  margin-right: 10px;
  padding: 10px 20px;
  font-size: 16px;
  border: none;
  border-radius: 4px;
  background-color: #007bff;
  color: white;
  cursor: pointer;
}

.control-group button:hover {
  background-color: #0056b3;
}

/* === Footer === */
footer {
  text-align: center;
  padding: 2rem 0;
  margin-top: 4rem;
  border-top: 1px solid rgba(255, 255, 255, 0.1);
}

footer p {
  font-size: 0.9rem;
  opacity: 0.8;
}

/* === Animations === */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes pulse {
  0%, 100% { transform: scale(1); }
  50% { transform: scale(1.05); }
}